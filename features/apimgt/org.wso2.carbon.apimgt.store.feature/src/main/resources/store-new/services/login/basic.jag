<%
/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

    var log = new Log("Services login app");
    var url = 'https://localhost:9443/client-registration/v0.14/register';
    var data = { "callbackUrl": "localhost", "clientName": request.getParameter("application", "UTF-8") , "owner": "admin", "grantType": "password refresh_token", "saasApp": true };
    var result = post(url, JSON.stringify(data) , {
        "Authorization": "Basic YWRtaW46YWRtaW4=",
        "Content-Type": "application/json"
    }, "json");

    // Below code generates the token request similar to the below curl command:
    // curl -k -d "grant_type=password&username=admin&password=admin&scope=apim:subscribe apim:self-signup apim:dedicated_gateway" -H "Authorization: Basic SGZFbDFqSlBkZzV0YnRyeGhBd3liTjA1UUdvYTpsNmMwYW9MY1dSM2Z3ZXpIaGM3WG9HT2h0NUFh" https://localhost:8243/token

    var clientId = result.data.clientId;
    var clientSecret = result.data.clientSecret;
    var Base64 = org.apache.axiom.om.util.Base64;
    var String = Packages.java.lang.String;
    var base64encoded = Base64.encode ( new String (clientId + ":" + clientSecret).getBytes());
    var tokenRequestData = {
        "grant_type": "password",
        "username": request.getParameter("username", "UTF-8"),
        "password": request.getParameter("password", "UTF-8"),
        "scope": "apim:subscribe apim:self-signup apim:dedicated_gateway"
    };
    var tokenEndpoint = "https://localhost:8243/token";
    var result = post(tokenEndpoint, tokenRequestData , {
        "Authorization": "Basic " + base64encoded,
    });

    response.contentType = "application/json";
    var token_response = JSON.parse(result.data);

    var token_length = token_response.access_token.length;
    var access_token = String(token_response.access_token);


    var access_token_token_part_1 = access_token.substring(0, token_length/2);
    var access_token_token_part_2 = access_token.substring(token_length/2, token_length);

    var refresh_token = String(token_response.refresh_token);
    token_length = token_response.refresh_token.length;
    var refresh_token_token_part_1 = refresh_token.substring(0, token_length/2)
    var refresh_token_token_part_2 = refresh_token.substring(token_length/2, token_length)


    var response_data = {
        AM_ACC_TOKEN_DEFAULT_P1: String(access_token_token_part_1),
        AM_REF_TOKEN_DEFAULT_P1: String(refresh_token_token_part_1),
        scopes: String(token_response.scope),
        expires_in: String(token_response.expires_in),
        authUser : request.getParameter("username", "UTF-8")
    }
    var cookie = {'name': 'AM_ACC_TOKEN_DEFAULT_P2', 'value': access_token_token_part_2, 'path': "/api/am/store", "secure": true, "maxAge": -1};
    response.addCookie(cookie);
    cookie = {'name': 'AM_REF_TOKEN_DEFAULT_P2', 'value': refresh_token_token_part_2, 'path': "/api/am/store", "secure": true, "maxAge": -1};
    response.addCookie(cookie);
    print(response_data);

%>